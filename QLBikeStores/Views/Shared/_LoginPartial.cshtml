@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@*<ul class="navbar-nav">*@
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a id="manage" class="nav-link text-white" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"><i class="bi bi-unlock"></i> @UserManager.GetUserName(User) | </a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-white"><i class="bi bi-box-arrow-left"></i>LOGOUT</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-important" id="register" asp-area="Identity" asp-page="/Account/Register"><i class="bi bi-lock"></i>REGISTER</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-important" id="login" asp-area="Identity" asp-page="/Account/Login"><i class="bi bi-box-arrow-right"></i>LOGIN</a>
    </li>
} 
@*</ul>*@
